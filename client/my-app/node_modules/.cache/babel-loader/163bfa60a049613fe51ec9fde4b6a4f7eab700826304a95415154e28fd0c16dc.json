{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\backup_App.js\",\n  _s = $RefreshSig$();\n// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//  game palyer\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nfunction App() {\n  _s();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [opponentName, setOpponentName] = useState(\"\");\n  const [gameStarted, setGameStarted] = useState(false);\n  const [playerChoice, setPlayerChoice] = useState(\"\");\n  const [opponentChoice, setOpponentChoice] = useState(\"\");\n  const [gameResult, setGameResult] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"opponentFound\", opponentName => {\n      setOpponentName(opponentName);\n      setGameStarted(true);\n    });\n    socket.on(\"choiceMade\", opponentChoice => {\n      setOpponentChoice(opponentChoice);\n    });\n    socket.on(\"gameResult\", result => {\n      setGameResult(result);\n    });\n    socket.on(\"gameReset\", () => {\n      setPlayerChoice(\"\");\n      setOpponentChoice(\"\");\n      setGameResult(\"\");\n    });\n    return () => {\n      socket.off(\"opponentFound\");\n      socket.off(\"choiceMade\");\n      socket.off(\"gameResult\");\n      socket.off(\"gameReset\");\n    };\n  }, []);\n  const handleJoinGame = () => {\n    socket.emit(\"joinGame\", playerName);\n  };\n  const handleMakeChoice = choice => {\n    setPlayerChoice(choice);\n    socket.emit(\"makeChoice\", choice);\n  };\n  const handleResetGame = () => {\n    socket.emit(\"resetGame\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinGame,\n        children: \"Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Player: \", playerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Opponent: \", opponentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), !playerChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMakeChoice(\"rock\"),\n          children: \"Rock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMakeChoice(\"paper\"),\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMakeChoice(\"scissors\"),\n          children: \"Scissors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this), playerChoice && !opponentChoice && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Waiting for opponent...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 47\n      }, this), playerChoice && opponentChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"You chose: \", playerChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Opponent chose: \", opponentChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: gameResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetGame,\n          children: \"Play again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rlnPNUHtHP/TL8KZl4PG8yllkmI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","socket","App","playerName","setPlayerName","opponentName","setOpponentName","gameStarted","setGameStarted","playerChoice","setPlayerChoice","opponentChoice","setOpponentChoice","gameResult","setGameResult","on","result","off","handleJoinGame","emit","handleMakeChoice","choice","handleResetGame","e","target","value"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/backup_App.js"],"sourcesContent":["// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n//  game palyer\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:4000\");\n\nfunction App() {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [opponentName, setOpponentName] = useState(\"\");\n  const [gameStarted, setGameStarted] = useState(false);\n  const [playerChoice, setPlayerChoice] = useState(\"\");\n  const [opponentChoice, setOpponentChoice] = useState(\"\");\n  const [gameResult, setGameResult] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"opponentFound\", (opponentName) => {\n      setOpponentName(opponentName);\n      setGameStarted(true);\n    });\n\n    socket.on(\"choiceMade\", (opponentChoice) => {\n      setOpponentChoice(opponentChoice);\n    });\n\n    socket.on(\"gameResult\", (result) => {\n      setGameResult(result);\n    });\n\n    socket.on(\"gameReset\", () => {\n      setPlayerChoice(\"\");\n      setOpponentChoice(\"\");\n      setGameResult(\"\");\n    });\n\n    return () => {\n      socket.off(\"opponentFound\");\n      socket.off(\"choiceMade\");\n      socket.off(\"gameResult\");\n      socket.off(\"gameReset\");\n    };\n  }, []);\n\n  const handleJoinGame = () => {\n    socket.emit(\"joinGame\", playerName);\n  };\n\n  const handleMakeChoice = (choice) => {\n    setPlayerChoice(choice);\n    socket.emit(\"makeChoice\", choice);\n  };\n\n  const handleResetGame = () => {\n    socket.emit(\"resetGame\");\n  };\n\n  return (\n    <div>\n      {!gameStarted && (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n          />\n          <button onClick={handleJoinGame}>Join game</button>\n        </div>\n      )}\n      {gameStarted && (\n        <div>\n          <h2>Player: {playerName}</h2>\n          <h2>Opponent: {opponentName}</h2>\n          {!playerChoice && (\n            <div>\n              <button onClick={() => handleMakeChoice(\"rock\")}>Rock</button>\n              <button onClick={() => handleMakeChoice(\"paper\")}>Paper</button>\n              <button onClick={() => handleMakeChoice(\"scissors\")}>\n                Scissors\n              </button>\n            </div>\n          )}\n          {playerChoice && !opponentChoice && <h2>Waiting for opponent...</h2>}\n          {playerChoice && opponentChoice && (\n            <div>\n              <h2>You chose: {playerChoice}</h2>\n              <h2>Opponent chose: {opponentChoice}</h2>\n              <h2>{gameResult}</h2>\n              <button onClick={handleResetGame}>Play again</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC;AAElC,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASE,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,YAAY,EAAEC,eAAe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"},"metadata":{},"sourceType":"module","externalDependencies":[]}