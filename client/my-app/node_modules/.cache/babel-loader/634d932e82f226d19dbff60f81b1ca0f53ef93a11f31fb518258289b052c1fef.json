{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\assets\\\\one.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './one.css';\nimport ladderImg from './ladder.png';\nimport snakeImg from './snake.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playerPosition, setPlayerPosition] = useState(1);\n  const [computerPosition, setComputerPosition] = useState(1);\n  const [showResult, setShowResult] = useState(false);\n  const [playerRoll, setPlayerRoll] = useState(0);\n  const [computerRoll, setComputerRoll] = useState(0);\n  const rollDice = () => {\n    const playerRollResult = Math.ceil(Math.random() * 6);\n    const computerRollResult = Math.ceil(Math.random() * 6);\n    setPlayerPosition(position => Math.min(position + playerRollResult, 100));\n    setComputerPosition(position => Math.min(position + computerRollResult, 100));\n    setPlayerRoll(playerRollResult);\n    setComputerRoll(computerRollResult);\n    setShowResult(true);\n  };\n  const renderBoard = () => {\n    const cells = [];\n    for (let i = 0; i < 100; i++) {\n      const cellNumber = i + 1;\n      const isActive = playerPosition === cellNumber || computerPosition === cellNumber;\n      const ladder = ladderList.find(ladder => ladder.start === cellNumber);\n      const snake = snakeList.find(snake => snake.start === cellNumber);\n      cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell ${isActive ? 'active' : ''}`,\n        children: [ladder && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ladderImg,\n          alt: \"ladder\",\n          className: \"ladder\",\n          style: {\n            left: ladderLeft(ladder.start),\n            top: ladderTop(ladder.start)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }, this), snake && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: snakeImg,\n          alt: \"snake\",\n          className: \"snake\",\n          style: {\n            left: snakeLeft(snake.start),\n            top: snakeTop(snake.start)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), cellNumber]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this));\n    }\n    return cells;\n  };\n  const ladderLeft = position => {\n    const column = (position - 1) % 10;\n    const row = 9 - Math.floor((position - 1) / 10);\n    const isEvenRow = row % 2 === 0;\n    if (isEvenRow) {\n      return `${column * 10 + 5}%`;\n    } else {\n      return `${(9 - column) * 10 + 5}%`;\n    }\n  };\n  const ladderTop = position => {\n    const row = 9 - Math.floor((position - 1) / 10);\n    return `${row * 10}%`;\n  };\n  const snakeLeft = position => {\n    const column = (position - 1) % 10;\n    const row = 9 - Math.floor((position - 1) / 10);\n    const isEvenRow = row % 2 === 0;\n    if (isEvenRow) {\n      return `${column * 10 + 5}%`;\n    } else {\n      return `${(9 - column) * 10 + 5}%`;\n    }\n  };\n  const snakeTop = position => {\n    const row = 9 - Math.floor((position - 1) / 10);\n    return `${row * 10 + 30}%`;\n  };\n  const renderResult = () => {\n    if (showResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You rolled: \", playerRoll]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Computer rolled: \", computerRoll]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snake and Ladder Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), renderResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"viIDxJ9inlnbY672NjWhLh2JRoY=\");\n_c = App;\nconst ladderList = [{\n  start: 2,\n  end: 23\n}, {\n  start: 7,\n  end: 29\n}, {\n  start: 15,\n  end: 37\n}, {\n  start: 34,\n  end: 46\n}, {\n  start: 47,\n  end: 65\n}, {\n  start: 56,\n  end: 73\n}, {\n  start: 67,\n  end: 86\n}, {\n  start: 81,\n  end: 98\n}];\nconst snakeList = [{\n  start: 32,\n  end: 10\n}, {\n  start: 36,\n  end: 6\n}, {\n  start: 48,\n  end: 26\n}, {\n  start: 62,\n  end: 18\n}, {\n  start: 88,\n  end: 24\n}, {\n  start: 95,\n  end: 56\n}, {\n  start: 97,\n  end: 78\n}];\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ladderImg","snakeImg","App","playerPosition","setPlayerPosition","computerPosition","setComputerPosition","showResult","setShowResult","playerRoll","setPlayerRoll","computerRoll","setComputerRoll","rollDice","playerRollResult","Math","ceil","random","computerRollResult","position","min","renderBoard","cells","i","cellNumber","isActive","ladder","ladderList","find","start","snake","snakeList","push","left","ladderLeft","top","ladderTop","snakeLeft","snakeTop","column","row","floor","isEvenRow","renderResult","window","location","reload","end"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/assets/one.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './one.css';\r\nimport ladderImg from './ladder.png';\r\nimport snakeImg from './snake.png';\r\n\r\nconst App = () => {\r\n  const [playerPosition, setPlayerPosition] = useState(1);\r\n  const [computerPosition, setComputerPosition] = useState(1);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [playerRoll, setPlayerRoll] = useState(0);\r\n  const [computerRoll, setComputerRoll] = useState(0);\r\n  \r\n  const rollDice = () => {\r\n    const playerRollResult = Math.ceil(Math.random() * 6);\r\n    const computerRollResult = Math.ceil(Math.random() * 6);\r\n    setPlayerPosition((position) => Math.min(position + playerRollResult, 100));\r\n    setComputerPosition((position) => Math.min(position + computerRollResult, 100));\r\n    setPlayerRoll(playerRollResult);\r\n    setComputerRoll(computerRollResult);\r\n    setShowResult(true);\r\n  };\r\n\r\n  const renderBoard = () => {\r\n    const cells = [];\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      const cellNumber = i + 1;\r\n      const isActive = playerPosition === cellNumber || computerPosition === cellNumber;\r\n      const ladder = ladderList.find((ladder) => ladder.start === cellNumber);\r\n      const snake = snakeList.find((snake) => snake.start === cellNumber);\r\n\r\n      cells.push(\r\n        <div key={i} className={`cell ${isActive ? 'active' : ''}`}>\r\n          {ladder && <img src={ladderImg} alt=\"ladder\" className=\"ladder\" style={{ left: ladderLeft(ladder.start), top: ladderTop(ladder.start) }} />}\r\n          {snake && <img src={snakeImg} alt=\"snake\" className=\"snake\" style={{ left: snakeLeft(snake.start), top: snakeTop(snake.start) }} />}\r\n          {cellNumber}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return cells;\r\n  };\r\n\r\n  const ladderLeft = (position) => {\r\n    const column = (position - 1) % 10;\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    const isEvenRow = row % 2 === 0;\r\n\r\n    if (isEvenRow) {\r\n      return `${column * 10 + 5}%`;\r\n    } else {\r\n      return `${(9 - column) * 10 + 5}%`;\r\n    }\r\n  };\r\n\r\n  const ladderTop = (position) => {\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    return `${row * 10}%`;\r\n  };\r\n\r\n  const snakeLeft = (position) => {\r\n    const column = (position - 1) % 10;\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    const isEvenRow = row % 2 === 0;\r\n\r\n    if (isEvenRow) {\r\n      return `${column * 10 + 5}%`;\r\n    } else {\r\n      return `${(9 - column) * 10 + 5}%`;\r\n    }\r\n  };\r\n\r\n  const snakeTop\r\n  = (position) => {\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    return `${row * 10 + 30}%`;\r\n    };\r\n    \r\n    const renderResult = () => {\r\n    if (showResult) {\r\n    return (\r\n    <div className=\"result\">\r\n    <p>You rolled: {playerRoll}</p>\r\n    <p>Computer rolled: {computerRoll}</p>\r\n    </div>\r\n    );\r\n    }\r\n    };\r\n    \r\n    return (\r\n    <div className=\"App\">\r\n    <h1>Snake and Ladder Game</h1>\r\n    <div className=\"board\">{renderBoard()}</div>\r\n    <div className=\"buttons\">\r\n    <button onClick={rollDice}>Roll Dice</button>\r\n    <button onClick={() => window.location.reload()}>Reset</button>\r\n    </div>\r\n    {renderResult()}\r\n    </div>\r\n    );\r\n    };\r\n    \r\n    const ladderList = [\r\n    { start: 2, end: 23 },\r\n    { start: 7, end: 29 },\r\n    { start: 15, end: 37 },\r\n    { start: 34, end: 46 },\r\n    { start: 47, end: 65 },\r\n    { start: 56, end: 73 },\r\n    { start: 67, end: 86 },\r\n    { start: 81, end: 98 },\r\n    ];\r\n    \r\n    const snakeList = [\r\n    { start: 32, end: 10 },\r\n    { start: 36, end: 6 },\r\n    { start: 48, end: 26 },\r\n    { start: 62, end: 18 },\r\n    { start: 88, end: 24 },\r\n    { start: 95, end: 56 },\r\n    { start: 97, end: 78 },\r\n    ];\r\n    \r\n    export default App;\r\n    \r\n    \r\n    \r\n    "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,QAAQ,MAAM,aAAa;AAAC;AAEnC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMc,QAAQ,GAAG,MAAM;IACrB,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;IACrD,MAAMC,kBAAkB,GAAGH,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;IACvDb,iBAAiB,CAAEe,QAAQ,IAAKJ,IAAI,CAACK,GAAG,CAACD,QAAQ,GAAGL,gBAAgB,EAAE,GAAG,CAAC,CAAC;IAC3ER,mBAAmB,CAAEa,QAAQ,IAAKJ,IAAI,CAACK,GAAG,CAACD,QAAQ,GAAGD,kBAAkB,EAAE,GAAG,CAAC,CAAC;IAC/ER,aAAa,CAACI,gBAAgB,CAAC;IAC/BF,eAAe,CAACM,kBAAkB,CAAC;IACnCV,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMa,WAAW,GAAG,MAAM;IACxB,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,UAAU,GAAGD,CAAC,GAAG,CAAC;MACxB,MAAME,QAAQ,GAAGtB,cAAc,KAAKqB,UAAU,IAAInB,gBAAgB,KAAKmB,UAAU;MACjF,MAAME,MAAM,GAAGC,UAAU,CAACC,IAAI,CAAEF,MAAM,IAAKA,MAAM,CAACG,KAAK,KAAKL,UAAU,CAAC;MACvE,MAAMM,KAAK,GAAGC,SAAS,CAACH,IAAI,CAAEE,KAAK,IAAKA,KAAK,CAACD,KAAK,KAAKL,UAAU,CAAC;MAEnEF,KAAK,CAACU,IAAI,eACR;QAAa,SAAS,EAAG,QAAOP,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;QAAA,WACxDC,MAAM,iBAAI;UAAK,GAAG,EAAE1B,SAAU;UAAC,GAAG,EAAC,QAAQ;UAAC,SAAS,EAAC,QAAQ;UAAC,KAAK,EAAE;YAAEiC,IAAI,EAAEC,UAAU,CAACR,MAAM,CAACG,KAAK,CAAC;YAAEM,GAAG,EAAEC,SAAS,CAACV,MAAM,CAACG,KAAK;UAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,EAC1IC,KAAK,iBAAI;UAAK,GAAG,EAAE7B,QAAS;UAAC,GAAG,EAAC,OAAO;UAAC,SAAS,EAAC,OAAO;UAAC,KAAK,EAAE;YAAEgC,IAAI,EAAEI,SAAS,CAACP,KAAK,CAACD,KAAK,CAAC;YAAEM,GAAG,EAAEG,QAAQ,CAACR,KAAK,CAACD,KAAK;UAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,EAClIL,UAAU;MAAA,GAHHD,CAAC;QAAA;QAAA;QAAA;MAAA,QAIL,CACP;IACH;IAEA,OAAOD,KAAK;EACd,CAAC;EAED,MAAMY,UAAU,GAAIf,QAAQ,IAAK;IAC/B,MAAMoB,MAAM,GAAG,CAACpB,QAAQ,GAAG,CAAC,IAAI,EAAE;IAClC,MAAMqB,GAAG,GAAG,CAAC,GAAGzB,IAAI,CAAC0B,KAAK,CAAC,CAACtB,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC;IAC/C,MAAMuB,SAAS,GAAGF,GAAG,GAAG,CAAC,KAAK,CAAC;IAE/B,IAAIE,SAAS,EAAE;MACb,OAAQ,GAAEH,MAAM,GAAG,EAAE,GAAG,CAAE,GAAE;IAC9B,CAAC,MAAM;MACL,OAAQ,GAAE,CAAC,CAAC,GAAGA,MAAM,IAAI,EAAE,GAAG,CAAE,GAAE;IACpC;EACF,CAAC;EAED,MAAMH,SAAS,GAAIjB,QAAQ,IAAK;IAC9B,MAAMqB,GAAG,GAAG,CAAC,GAAGzB,IAAI,CAAC0B,KAAK,CAAC,CAACtB,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC;IAC/C,OAAQ,GAAEqB,GAAG,GAAG,EAAG,GAAE;EACvB,CAAC;EAED,MAAMH,SAAS,GAAIlB,QAAQ,IAAK;IAC9B,MAAMoB,MAAM,GAAG,CAACpB,QAAQ,GAAG,CAAC,IAAI,EAAE;IAClC,MAAMqB,GAAG,GAAG,CAAC,GAAGzB,IAAI,CAAC0B,KAAK,CAAC,CAACtB,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC;IAC/C,MAAMuB,SAAS,GAAGF,GAAG,GAAG,CAAC,KAAK,CAAC;IAE/B,IAAIE,SAAS,EAAE;MACb,OAAQ,GAAEH,MAAM,GAAG,EAAE,GAAG,CAAE,GAAE;IAC9B,CAAC,MAAM;MACL,OAAQ,GAAE,CAAC,CAAC,GAAGA,MAAM,IAAI,EAAE,GAAG,CAAE,GAAE;IACpC;EACF,CAAC;EAED,MAAMD,QAAQ,GACXnB,QAAQ,IAAK;IACd,MAAMqB,GAAG,GAAG,CAAC,GAAGzB,IAAI,CAAC0B,KAAK,CAAC,CAACtB,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC;IAC/C,OAAQ,GAAEqB,GAAG,GAAG,EAAE,GAAG,EAAG,GAAE;EAC1B,CAAC;EAED,MAAMG,YAAY,GAAG,MAAM;IAC3B,IAAIpC,UAAU,EAAE;MAChB,oBACA;QAAK,SAAS,EAAC,QAAQ;QAAA,wBACvB;UAAA,2BAAgBE,UAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC/B;UAAA,gCAAqBE,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAChC;IAEN;EACA,CAAC;EAED,oBACA;IAAK,SAAS,EAAC,KAAK;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,eAC9B;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEU,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5C;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAQ,OAAO,EAAER,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC7C;QAAQ,OAAO,EAAE,MAAM+B,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD,EACLH,YAAY,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEN,CAAC;AAAC,GA/FAzC,GAAG;AAAA,KAAHA,GAAG;AAiGL,MAAMyB,UAAU,GAAG,CACnB;EAAEE,KAAK,EAAE,CAAC;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACrB;EAAElB,KAAK,EAAE,CAAC;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACrB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,CACrB;AAED,MAAMhB,SAAS,GAAG,CAClB;EAAEF,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAE,CAAC,EACrB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,EACtB;EAAElB,KAAK,EAAE,EAAE;EAAEkB,GAAG,EAAE;AAAG,CAAC,CACrB;AAED,eAAe7C,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}