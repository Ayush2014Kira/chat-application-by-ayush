{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\backup_App.js\",\n  _s = $RefreshSig$();\n// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8001\");\nfunction App() {\n  _s();\n  const [room, setRoom] = useState(\"\");\n  var [rooms, setRooms] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList([...messageList, {\n        ...data,\n        sent: false\n      }]);\n    });\n  });\n  const joinRoom = () => {\n    socket.emit(name);\n    socket.emit(\"join_room\", room);\n    console.log(\"rrrrrrrrrrr\", room);\n    setRooms([...rooms, room]);\n    console.log(\"rssssssssssssss\", rooms);\n  };\n  console.log(room);\n  const sendMessage = () => {\n    const msgObj = {\n      room: room,\n      name: name,\n      message: message\n    };\n    socket.emit(\"send_message\", msgObj);\n    setMessageList([...messageList, {\n      ...msgObj,\n      sent: true\n    }]);\n    setMessage(\"\");\n  };\n  console.log(...messageList, message);\n  rooms = rooms.filter(function (value, index, array) {\n    return array.indexOf(value) === index;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Room Number...\",\n        value: room,\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name....\",\n        value: name,\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      value: message,\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-id\": room,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Room \", room]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"box row\",\n        style: {\n          grid: \"col-3\"\n        },\n        children: messageList.filter(msgObj => msgObj.room === room).map((msgObj, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: msgObj.sent ? \"sent-message\" : \"received-message\",\n          children: [msgObj.name, \" : \", msgObj.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), \"   \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gkj8FdYxz2ny9sXdYZwLDDiNH+A=\");\n_c = App;\nexport default App;\n\n//  game palyer\n\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:4000\");\n\n// function App() {\n//   const [playerName, setPlayerName] = useState(\"\");\n//   const [opponentName, setOpponentName] = useState(\"\");\n//   const [gameStarted, setGameStarted] = useState(false);\n//   const [playerChoice, setPlayerChoice] = useState(\"\");\n//   const [opponentChoice, setOpponentChoice] = useState(\"\");\n//   const [gameResult, setGameResult] = useState(\"\");\n\n//   useEffect(() => {\n//     socket.on(\"opponentFound\", (opponentName) => {\n//       setOpponentName(opponentName);\n//       setGameStarted(true);\n//     });\n\n//     socket.on(\"choiceMade\", (opponentChoice) => {\n//       setOpponentChoice(opponentChoice);\n//     });\n\n//     socket.on(\"gameResult\", (result) => {\n//       setGameResult(result);\n//     });\n\n//     socket.on(\"gameReset\", () => {\n//       setPlayerChoice(\"\");\n//       setOpponentChoice(\"\");\n//       setGameResult(\"\");\n//     });\n\n//     return () => {\n//       socket.off(\"opponentFound\");\n//       socket.off(\"choiceMade\");\n//       socket.off(\"gameResult\");\n//       socket.off(\"gameReset\");\n//     };\n//   }, []);\n\n//   const handleJoinGame = () => {\n//     socket.emit(\"joinGame\", playerName);\n//   };\n\n//   const handleMakeChoice = (choice) => {\n//     setPlayerChoice(choice);\n//     socket.emit(\"makeChoice\", choice);\n//   };\n\n//   const handleResetGame = () => {\n//     socket.emit(\"resetGame\");\n//   };\n\n//   return (\n//     <div>\n//       {!gameStarted && (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//           <button onClick={handleJoinGame}>Join game</button>\n//         </div>\n//       )}\n//       {gameStarted && (\n//         <div>\n//           <h2>Player: {playerName}</h2>\n//           <h2>Opponent: {opponentName}</h2>\n//           {!playerChoice && (\n//             <div>\n//               <button onClick={() => handleMakeChoice(\"rock\")}>Rock</button>\n//               <button onClick={() => handleMakeChoice(\"paper\")}>Paper</button>\n//               <button onClick={() => handleMakeChoice(\"scissors\")}>\n//                 Scissors\n//               </button>\n//             </div>\n//           )}\n//           {playerChoice && !opponentChoice && <h2>Waiting for opponent...</h2>}\n//           {playerChoice && opponentChoice && (\n//             <div>\n//               <h2>You chose: {playerChoice}</h2>\n//               <h2>Opponent chose: {opponentChoice}</h2>\n//               <h2>{gameResult}</h2>\n//               <button onClick={handleResetGame}>Play again</button>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","socket","App","room","setRoom","rooms","setRooms","message","setMessage","messageList","setMessageList","name","setName","on","data","sent","joinRoom","emit","console","log","sendMessage","msgObj","filter","value","index","array","indexOf","event","target","map","grid"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/backup_App.js"],"sourcesContent":["// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nconst socket = io(\"http://localhost:8001\");\n\nfunction App() {\n  const [room, setRoom] = useState(\"\");\n  var [rooms, setRooms] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const[name,setName]=useState(\"\")\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList([...messageList,{...data,sent:false} ]);\n    });\n  });\n  \n  \n  \n\n  const joinRoom = () => {\n    socket.emit(name)\n    socket.emit(\"join_room\", room);\n    console.log(\"rrrrrrrrrrr\",room);\n    setRooms([...rooms,room])\n    console.log(\"rssssssssssssss\",rooms);\n\n  };\n  console.log(room);\n  const sendMessage = () => {\n    const msgObj = {\n      room: room,\n      name: name,\n      message: message,\n    };\n\n    socket.emit(\"send_message\",msgObj);\n    \n    setMessageList([...messageList, {...msgObj,sent:true}]);\n    setMessage(\"\");\n  };\n  \n  console.log(...messageList,message)\n  rooms = rooms.filter(function (value, index, array) { \n    return array.indexOf(value) === index;\n  });\n  \n  return (\n    <div className=\"App\">\n      <div className=\"room\">\n\n      <input\n        placeholder=\"Room Number...\"\n        value={room}\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      /> \n      <input\n      placeholder=\"Name....\"\n      value={name}\n      onChange={(event) => {\n        setName(event.target.value);\n      }}\n    />\n    </div>\n      <button onClick={joinRoom}>Join Room</button>\n      <br />\n      <input\n        placeholder=\"Message...\"\n        value={message}\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n        />\n      <button onClick={sendMessage}>Send Message</button>\n      <br />\n      {rooms.map((room, index) => (\n        \n      <div key={index} data-id={room}>\n        <h3>Room {room}</h3>\n        <ul className=\"box row\" style={{grid:\"col-3\"}}>\n          {messageList\n            .filter((msgObj) => msgObj.room === room)\n            .map((msgObj, index) => (\n              <li\n                key={index}\n                className={msgObj.sent ? \"sent-message\" : \"received-message\"}\n              >\n                {msgObj.name} : {msgObj.message}\n              </li>\n            ))}\n        </ul>   </div>\n    ))}\n      {/* <ul className=\"box\" style={{grid:\"col-3\"}}>\n        \n        {messageList.map((msgObj, index) => (\n          <li key={index} className={msgObj.sent ? \"sent-message\" : \"received-message\"}\n          >\n            {msgObj.name} :{msgObj.message}\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n//  game palyer\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:4000\");\n\n// function App() {\n//   const [playerName, setPlayerName] = useState(\"\");\n//   const [opponentName, setOpponentName] = useState(\"\");\n//   const [gameStarted, setGameStarted] = useState(false);\n//   const [playerChoice, setPlayerChoice] = useState(\"\");\n//   const [opponentChoice, setOpponentChoice] = useState(\"\");\n//   const [gameResult, setGameResult] = useState(\"\");\n\n//   useEffect(() => {\n//     socket.on(\"opponentFound\", (opponentName) => {\n//       setOpponentName(opponentName);\n//       setGameStarted(true);\n//     });\n\n//     socket.on(\"choiceMade\", (opponentChoice) => {\n//       setOpponentChoice(opponentChoice);\n//     });\n\n//     socket.on(\"gameResult\", (result) => {\n//       setGameResult(result);\n//     });\n\n//     socket.on(\"gameReset\", () => {\n//       setPlayerChoice(\"\");\n//       setOpponentChoice(\"\");\n//       setGameResult(\"\");\n//     });\n\n//     return () => {\n//       socket.off(\"opponentFound\");\n//       socket.off(\"choiceMade\");\n//       socket.off(\"gameResult\");\n//       socket.off(\"gameReset\");\n//     };\n//   }, []);\n\n//   const handleJoinGame = () => {\n//     socket.emit(\"joinGame\", playerName);\n//   };\n\n//   const handleMakeChoice = (choice) => {\n//     setPlayerChoice(choice);\n//     socket.emit(\"makeChoice\", choice);\n//   };\n\n//   const handleResetGame = () => {\n//     socket.emit(\"resetGame\");\n//   };\n\n//   return (\n//     <div>\n//       {!gameStarted && (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//           <button onClick={handleJoinGame}>Join game</button>\n//         </div>\n//       )}\n//       {gameStarted && (\n//         <div>\n//           <h2>Player: {playerName}</h2>\n//           <h2>Opponent: {opponentName}</h2>\n//           {!playerChoice && (\n//             <div>\n//               <button onClick={() => handleMakeChoice(\"rock\")}>Rock</button>\n//               <button onClick={() => handleMakeChoice(\"paper\")}>Paper</button>\n//               <button onClick={() => handleMakeChoice(\"scissors\")}>\n//                 Scissors\n//               </button>\n//             </div>\n//           )}\n//           {playerChoice && !opponentChoice && <h2>Waiting for opponent...</h2>}\n//           {playerChoice && opponentChoice && (\n//             <div>\n//               <h2>You chose: {playerChoice}</h2>\n//               <h2>Opponent chose: {opponentChoice}</h2>\n//               <h2>{gameResult}</h2>\n//               <button onClick={handleResetGame}>Play again</button>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}