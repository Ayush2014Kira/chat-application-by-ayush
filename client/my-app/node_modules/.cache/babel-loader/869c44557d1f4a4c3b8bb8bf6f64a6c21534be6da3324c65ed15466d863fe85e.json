{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\backup_App.js\",\n  _s = $RefreshSig$();\n// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//  game palyer\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport calculateResult from \"./calculateResult\";\nimport GameBoard from \"./gamebord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [gameResult, setGameResult] = useState(null);\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [opponentChoice, setOpponentChoice] = useState(null);\n  const [showResetButton, setShowResetButton] = useState(false);\n  useEffect(() => {\n    socket.on(\"opponentFound\", data => {\n      setOpponent(data);\n    });\n    socket.on(\"gameResult\", data => {\n      setGameResult(data.result);\n      setShowResetButton(true);\n    });\n    socket.on(\"choiceMade\", data => {\n      setOpponentChoice(data.choice);\n    });\n    socket.on(\"gameReset\", () => {\n      setPlayerChoice(null);\n      setOpponentChoice(null);\n      setGameResult(null);\n      setShowResetButton(false);\n    });\n    return () => {\n      socket.off(\"opponentFound\");\n      socket.off(\"gameResult\");\n      socket.off(\"choiceMade\");\n      socket.off(\"gameReset\");\n    };\n  }, []);\n  function handleJoinGame() {\n    const name = prompt(\"Enter your name:\");\n    setPlayer({\n      name: name\n    });\n    socket.emit(\"joinGame\", name);\n  }\n  function handleChoiceClick(choice) {\n    setPlayerChoice(choice);\n    socket.emit(\"makeChoice\", {\n      choice: choice\n    });\n  }\n  function handleResetClick() {\n    socket.emit(\"resetGame\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !player ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinGame,\n      children: \"Join Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), opponent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"vs \", opponent.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), gameResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: gameResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this), showResetButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetClick,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleChoiceClick(\"rock\"),\n            disabled: playerChoice !== null,\n            children: \"Rock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleChoiceClick(\"paper\"),\n            disabled: playerChoice !== null,\n            children: \"Paper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleChoiceClick(\"scissors\"),\n            disabled: playerChoice !== null,\n            children: \"Scissors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this), opponentChoice && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: opponentChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EaHHV5+t1r4eQ8wNggwHgbKiJ2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","calculateResult","GameBoard","socket","App","player","setPlayer","opponent","setOpponent","gameResult","setGameResult","playerChoice","setPlayerChoice","opponentChoice","setOpponentChoice","showResetButton","setShowResetButton","on","data","result","choice","off","handleJoinGame","name","prompt","emit","handleChoiceClick","handleResetClick"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/backup_App.js"],"sourcesContent":["// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n//  game palyer\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport calculateResult from \"./calculateResult\";\nimport GameBoard from \"./gamebord\";\nconst socket = io(\"http://localhost:4000\");\n\nfunction App() {\n  const [player, setPlayer] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [gameResult, setGameResult] = useState(null);\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [opponentChoice, setOpponentChoice] = useState(null);\n  const [showResetButton, setShowResetButton] = useState(false);\n\n  useEffect(() => {\n    socket.on(\"opponentFound\", (data) => {\n      setOpponent(data);\n    });\n\n    socket.on(\"gameResult\", (data) => {\n      setGameResult(data.result);\n      setShowResetButton(true);\n    });\n\n    socket.on(\"choiceMade\", (data) => {\n      setOpponentChoice(data.choice);\n    });\n\n    socket.on(\"gameReset\", () => {\n      setPlayerChoice(null);\n      setOpponentChoice(null);\n      setGameResult(null);\n      setShowResetButton(false);\n    });\n\n    return () => {\n      socket.off(\"opponentFound\");\n      socket.off(\"gameResult\");\n      socket.off(\"choiceMade\");\n      socket.off(\"gameReset\");\n    };\n  }, []);\n\n  function handleJoinGame() {\n    const name = prompt(\"Enter your name:\");\n    setPlayer({ name: name });\n    socket.emit(\"joinGame\", name);\n  }\n\n  function handleChoiceClick(choice) {\n    setPlayerChoice(choice);\n    socket.emit(\"makeChoice\", { choice: choice });\n  }\n\n  function handleResetClick() {\n    socket.emit(\"resetGame\");\n  }\n\n  return (\n    <div>\n      {!player ? (\n        <button onClick={handleJoinGame}>Join Game</button>\n      ) : (\n        <div>\n          <h2>{player.name}</h2>\n          {opponent && (\n            <div>\n              <h3>vs {opponent.name}</h3>\n              {gameResult ? (\n                <div>\n                  <h4>{gameResult}</h4>\n                  {showResetButton && (\n                    <button onClick={handleResetClick}>Play Again</button>\n                  )}\n                </div>\n              ) : (\n                <div>\n                  <button\n                    onClick={() => handleChoiceClick(\"rock\")}\n                    disabled={playerChoice !== null}\n                  >\n                    Rock\n                  </button>\n                  <button\n                    onClick={() => handleChoiceClick(\"paper\")}\n                    disabled={playerChoice !== null}\n                  >\n                    Paper\n                  </button>\n                  <button\n                    onClick={() => handleChoiceClick(\"scissors\")}\n                    disabled={playerChoice !== null}\n                  >\n                    Scissors\n                  </button>\n                </div>\n              )}\n              {opponentChoice && <h4>{opponentChoice}</h4>}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAAC;AACnC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}