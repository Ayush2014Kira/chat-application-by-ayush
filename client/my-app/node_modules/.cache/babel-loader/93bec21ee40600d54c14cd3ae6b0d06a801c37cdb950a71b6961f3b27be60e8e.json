{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\gamebord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nfunction GameBoard(props) {\n  _s();\n  const {\n    player\n  } = props;\n  const [opponent, setOpponent] = useState(null);\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [opponentChoice, setOpponentChoice] = useState(null);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    socket.on(\"opponentFound\", opponent => {\n      setOpponent(opponent);\n    });\n    socket.on(\"choiceMade\", data => {\n      if (data.player === player) {\n        setPlayerChoice(data.choice);\n      } else {\n        setOpponentChoice(data.choice);\n      }\n    });\n    socket.on(\"gameResult\", data => {\n      setResult(data.result);\n      setPlayerChoice(null);\n      setOpponentChoice(null);\n    });\n    socket.on(\"gameReset\", () => {\n      setResult(null);\n    });\n  }, [player]);\n  function handleChoiceSelect(choice) {\n    setPlayerChoice(choice);\n    socket.emit(\"makeChoice\", {\n      player: player,\n      choice: choice\n    });\n  }\n  function renderChoiceButtons() {\n    if (playerChoice === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select your choice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChoiceSelect(\"rock\"),\n          children: \"Rock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChoiceSelect(\"paper\"),\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChoiceSelect(\"scissors\"),\n          children: \"Scissors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n  function renderChoices() {\n    if (playerChoice !== null && opponentChoice !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your choice: \", playerChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [opponent.name, \"'s choice: \", opponentChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n  function renderResult() {\n    if (result !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => socket.emit(\"resetGame\"),\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rock Paper Scissors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: player.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), opponent ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: opponent.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this) : null, renderChoiceButtons(), renderChoices(), renderResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"sukVKHrRhFoA8dx6BF1LUxPW0Uc=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","io","socket","GameBoard","props","player","opponent","setOpponent","playerChoice","setPlayerChoice","opponentChoice","setOpponentChoice","result","setResult","on","data","choice","handleChoiceSelect","emit","renderChoiceButtons","renderChoices","name","renderResult"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/gamebord.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:4000\");\r\n\r\nfunction GameBoard(props) {\r\n  const { player } = props;\r\n  const [opponent, setOpponent] = useState(null);\r\n  const [playerChoice, setPlayerChoice] = useState(null);\r\n  const [opponentChoice, setOpponentChoice] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"opponentFound\", (opponent) => {\r\n      setOpponent(opponent);\r\n    });\r\n\r\n    socket.on(\"choiceMade\", (data) => {\r\n      if (data.player === player) {\r\n        setPlayerChoice(data.choice);\r\n      } else {\r\n        setOpponentChoice(data.choice);\r\n      }\r\n    });\r\n\r\n    socket.on(\"gameResult\", (data) => {\r\n      setResult(data.result);\r\n      setPlayerChoice(null);\r\n      setOpponentChoice(null);\r\n    });\r\n\r\n    socket.on(\"gameReset\", () => {\r\n      setResult(null);\r\n    });\r\n  }, [player]);\r\n\r\n  function handleChoiceSelect(choice) {\r\n    setPlayerChoice(choice);\r\n    socket.emit(\"makeChoice\", { player: player, choice: choice });\r\n  }\r\n\r\n  function renderChoiceButtons() {\r\n    if (playerChoice === null) {\r\n      return (\r\n        <div>\r\n          <h2>Select your choice:</h2>\r\n          <button onClick={() => handleChoiceSelect(\"rock\")}>Rock</button>\r\n          <button onClick={() => handleChoiceSelect(\"paper\")}>Paper</button>\r\n          <button onClick={() => handleChoiceSelect(\"scissors\")}>Scissors</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function renderChoices() {\r\n    if (playerChoice !== null && opponentChoice !== null) {\r\n      return (\r\n        <div>\r\n          <h2>Your choice: {playerChoice}</h2>\r\n          <h2>{opponent.name}'s choice: {opponentChoice}</h2>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function renderResult() {\r\n    if (result !== null) {\r\n      return (\r\n        <div>\r\n          <h2>{result}</h2>\r\n          <button onClick={() => socket.emit(\"resetGame\")}>Play Again</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Rock Paper Scissors</h1>\r\n      <h2>{player.name}</h2>\r\n      {opponent ? <h2>{opponent.name}</h2> : null}\r\n      {renderChoiceButtons()}\r\n      {renderChoices()}\r\n      {renderResult()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC;AAElC,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASE,SAAS,CAACC,KAAK,EAAE;EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxB,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdE,MAAM,CAACY,EAAE,CAAC,eAAe,EAAGR,QAAQ,IAAK;MACvCC,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,CAAC;IAEFJ,MAAM,CAACY,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MAChC,IAAIA,IAAI,CAACV,MAAM,KAAKA,MAAM,EAAE;QAC1BI,eAAe,CAACM,IAAI,CAACC,MAAM,CAAC;MAC9B,CAAC,MAAM;QACLL,iBAAiB,CAACI,IAAI,CAACC,MAAM,CAAC;MAChC;IACF,CAAC,CAAC;IAEFd,MAAM,CAACY,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MAChCF,SAAS,CAACE,IAAI,CAACH,MAAM,CAAC;MACtBH,eAAe,CAAC,IAAI,CAAC;MACrBE,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC;IAEFT,MAAM,CAACY,EAAE,CAAC,WAAW,EAAE,MAAM;MAC3BD,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,SAASY,kBAAkB,CAACD,MAAM,EAAE;IAClCP,eAAe,CAACO,MAAM,CAAC;IACvBd,MAAM,CAACgB,IAAI,CAAC,YAAY,EAAE;MAAEb,MAAM,EAAEA,MAAM;MAAEW,MAAM,EAAEA;IAAO,CAAC,CAAC;EAC/D;EAEA,SAASG,mBAAmB,GAAG;IAC7B,IAAIX,YAAY,KAAK,IAAI,EAAE;MACzB,oBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA4B,eAC5B;UAAQ,OAAO,EAAE,MAAMS,kBAAkB,CAAC,MAAM,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eAChE;UAAQ,OAAO,EAAE,MAAMA,kBAAkB,CAAC,OAAO,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eAClE;UAAQ,OAAO,EAAE,MAAMA,kBAAkB,CAAC,UAAU,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA,QACpE;IAEV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEA,SAASG,aAAa,GAAG;IACvB,IAAIZ,YAAY,KAAK,IAAI,IAAIE,cAAc,KAAK,IAAI,EAAE;MACpD,oBACE;QAAA,wBACE;UAAA,4BAAkBF,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACpC;UAAA,WAAKF,QAAQ,CAACe,IAAI,iBAAaX,cAAc;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C;IAEV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEA,SAASY,YAAY,GAAG;IACtB,IAAIV,MAAM,KAAK,IAAI,EAAE;MACnB,oBACE;QAAA,wBACE;UAAA,UAAKA;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM,eACjB;UAAQ,OAAO,EAAE,MAAMV,MAAM,CAACgB,IAAI,CAAC,WAAW,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB;MAAA;QAAA;QAAA;QAAA;MAAA,QAChE;IAEV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC5B;MAAA,UAAKb,MAAM,CAACgB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,EACrBf,QAAQ,gBAAG;MAAA,UAAKA,QAAQ,CAACe;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,GAAG,IAAI,EAC1CF,mBAAmB,EAAE,EACrBC,aAAa,EAAE,EACfE,YAAY,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEV;AAAC,GAvFQnB,SAAS;AAAA,KAATA,SAAS;AAyFlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}