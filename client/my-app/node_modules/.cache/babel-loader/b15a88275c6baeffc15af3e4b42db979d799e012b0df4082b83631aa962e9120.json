{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\assets\\\\board.js\";\nimport React from 'react';\nimport './board.css';\n\n// const Board = ({ size, children }) => {\n// const renderCells = () => {\n// const cells = [];\n\n// for (let i = size; i >= 1; i--) {\n// cells.push(<div key={i} className={`cell cell-${i}`}>{i}</div>);\n// }\n// return cells;\n// };\n// return (\n//     <div className=\"board\">\n//       {renderCells()}\n//       {children}\n//     </div>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    size,\n    children\n  } = _ref;\n  const renderCells = () => {\n    const cells = [];\n    let number = 1;\n    for (let row = 0; row < size; row++) {\n      const rowCells = [];\n      if (row % 2 === 0) {\n        // Even row\n        for (let col = 0; col < 10; col++) {\n          const cellNumber = number + col;\n          rowCells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell cell-${cellNumber}`,\n            children: cellNumber\n          }, cellNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this));\n        }\n      } else {\n        // Odd row\n        for (let col = 0; col < 10; col++) {\n          const cellNumber = number + (9 - col);\n          rowCells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell cell-${cellNumber}`,\n            children: cellNumber\n          }, cellNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this));\n        }\n      }\n      cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: rowCells\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this));\n      number += 10;\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [renderCells(), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Board","size","children","renderCells","cells","number","row","rowCells","col","cellNumber","push"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/assets/board.js"],"sourcesContent":["import React from 'react';\r\nimport './board.css';\r\n\r\n// const Board = ({ size, children }) => {\r\n// const renderCells = () => {\r\n// const cells = [];\r\n\r\n// for (let i = size; i >= 1; i--) {\r\n// cells.push(<div key={i} className={`cell cell-${i}`}>{i}</div>);\r\n// }\r\n// return cells;\r\n// };\r\n// return (\r\n//     <div className=\"board\">\r\n//       {renderCells()}\r\n//       {children}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\nconst Board = ({ size, children }) => {\r\n  const renderCells = () => {\r\n  const cells = [];\r\n  let number = 1;\r\n  for (let row = 0; row < size; row++) {\r\n    const rowCells = [];\r\n    if (row % 2 === 0) { // Even row\r\n      for (let col = 0; col < 10; col++) {\r\n        const cellNumber = number + col;\r\n        rowCells.push(<div key={cellNumber} className={`cell cell-${cellNumber}`}>{cellNumber}</div>);\r\n      }\r\n    } else { // Odd row\r\n      for (let col = 0; col < 10; col++) {\r\n        const cellNumber = number + (9 - col);\r\n        rowCells.push(<div key={cellNumber} className={`cell cell-${cellNumber}`}>{cellNumber}</div>);\r\n      }\r\n    }\r\n    cells.push(<div key={row} className=\"row\">{rowCells}</div>);\r\n    number += 10;\r\n  }\r\n  return cells;\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {renderCells()}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA,MAAMC,KAAK,GAAG,QAAwB;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC;EAC/B,MAAMC,WAAW,GAAG,MAAM;IAC1B,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,MAAM,GAAG,CAAC;IACd,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,IAAI,EAAEK,GAAG,EAAE,EAAE;MACnC,MAAMC,QAAQ,GAAG,EAAE;MACnB,IAAID,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;QAAE;QACnB,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;UACjC,MAAMC,UAAU,GAAGJ,MAAM,GAAGG,GAAG;UAC/BD,QAAQ,CAACG,IAAI,eAAC;YAAsB,SAAS,EAAG,aAAYD,UAAW,EAAE;YAAA,UAAEA;UAAU,GAA7DA,UAAU;YAAA;YAAA;YAAA;UAAA,QAA0D,CAAC;QAC/F;MACF,CAAC,MAAM;QAAE;QACP,KAAK,IAAID,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;UACjC,MAAMC,UAAU,GAAGJ,MAAM,IAAI,CAAC,GAAGG,GAAG,CAAC;UACrCD,QAAQ,CAACG,IAAI,eAAC;YAAsB,SAAS,EAAG,aAAYD,UAAW,EAAE;YAAA,UAAEA;UAAU,GAA7DA,UAAU;YAAA;YAAA;YAAA;UAAA,QAA0D,CAAC;QAC/F;MACF;MACAL,KAAK,CAACM,IAAI,eAAC;QAAe,SAAS,EAAC,KAAK;QAAA,UAAEH;MAAQ,GAA9BD,GAAG;QAAA;QAAA;QAAA;MAAA,QAAkC,CAAC;MAC3DD,MAAM,IAAI,EAAE;IACd;IACA,OAAOD,KAAK;EACd,CAAC;EAGC,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,WACnBD,WAAW,EAAE,EACbD,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,KA9BIF,KAAK;AAgCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}