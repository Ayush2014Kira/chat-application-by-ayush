{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\assets\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './game.css';\nimport Board from \"./board\";\nimport Dice from \"./dice\";\nimport Player from \"./player\";\nimport Ladder from \"./ladder\";\nimport Snake from \"./snake1\";\nimport Computer from \"./computer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [playerPosition, setPlayerPosition] = useState(0);\n  const [computerPosition, setComputerPosition] = useState(0);\n  const [diceRoll, setDiceRoll] = useState(1);\n  useEffect(() => {\n    if (playerPosition >= 100) {\n      alert('Congratulations! You won!');\n    }\n    if (computerPosition >= 100) {\n      alert('Sorry, you lost!');\n    }\n  }, [playerPosition, computerPosition]);\n  console.log(\"player position\", playerPosition);\n  console.log(\"computer position\", computerPosition);\n  const handleRollDice = () => {\n    const newRoll = Math.floor(Math.random() * 6) + 1;\n    setDiceRoll(newRoll);\n    // setPlayerPosition((pos) => {\n    //   const newPosition = pos + newRoll;\n    //   return getNewPositionAfterSnakesAndLadders(newPosition);\n    // });\n    // setComputerPosition((pos) => {\n    //     const newPosition = pos + Math.floor(Math.random() * 6) + 1;\n    //     console.log(\"new Positoion\",newPosition);\n    //   return getNewPositionAfterSnakesAndLadders(newPosition);\n    // });\n  };\n\n  // const getNewPositionAfterSnakesAndLadders = (position) => {\n  //   const snakes = [\n  //     { start: 14, end: 7 },\n  //     { start: 24, end: 2 },\n  //     { start: 35, end: 18 },\n  //     { start: 47, end: 32 },\n  //     { start: 62, end: 46 },\n  //     { start: 73, end: 56 },\n  //     { start: 82, end: 69 },\n  //     { start: 92, end: 88 },\n  //     { start: 97, end: 78 },\n  //   ];\n  //   const ladders = [\n  //     { start: 5, end: 36 },\n  //     { start: 9, end: 22 },\n  //     { start: 20, end: 65 },\n  //     { start: 28, end: 53 },\n  //     { start: 39, end: 59 },\n  //     { start: 51, end: 72 },\n  //     { start: 63, end: 84 },\n  //     { start: 71, end: 91 },\n  //     { start: 87, end: 94 },\n  //   ];\n  //   let newPosition = position;\n  //   console.log(\"ayush\",position);\n  //   snakes.forEach((snake) => {\n  //     if (position === snake.start) {\n  //       newPosition = snake.end;\n  //     }\n  //   });\n  //   ladders.forEach((ladder) => {\n  //     if (position === ladder.start) {\n  //       newPosition = ladder.end;\n  //     }\n  //   });\n  //   return newPosition;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        size: 100,\n        children: [/*#__PURE__*/_jsxDEV(Player, {\n          position: playerPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Computer, {\n          position: computerPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dice, {\n        value: diceRoll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRollDice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Game, \"QQ4tOAb3Yrd6k6STbpkBRaDfCuE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Dice","Player","Ladder","Snake","Computer","Game","playerPosition","setPlayerPosition","computerPosition","setComputerPosition","diceRoll","setDiceRoll","alert","console","log","handleRollDice","newRoll","Math","floor","random"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/assets/game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './game.css';\r\nimport Board from \"./board\"\r\nimport Dice from \"./dice\"\r\nimport Player from \"./player\"\r\nimport Ladder from \"./ladder\"\r\nimport Snake from \"./snake1\"\r\nimport Computer from \"./computer\"\r\n\r\nconst Game = () => {\r\n  const [playerPosition, setPlayerPosition] = useState(0);\r\n  const [computerPosition, setComputerPosition] = useState(0);\r\n  const [diceRoll, setDiceRoll] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (playerPosition >= 100) {\r\n      alert('Congratulations! You won!');\r\n    }\r\n    if (computerPosition >= 100) {\r\n      alert('Sorry, you lost!');\r\n    }\r\n  }, [playerPosition, computerPosition]);\r\nconsole.log(\"player position\",playerPosition);\r\nconsole.log(\"computer position\",computerPosition);\r\n  const handleRollDice = () => {\r\n    const newRoll = Math.floor(Math.random() * 6) + 1;\r\n    setDiceRoll(newRoll);\r\n    // setPlayerPosition((pos) => {\r\n    //   const newPosition = pos + newRoll;\r\n    //   return getNewPositionAfterSnakesAndLadders(newPosition);\r\n    // });\r\n    // setComputerPosition((pos) => {\r\n    //     const newPosition = pos + Math.floor(Math.random() * 6) + 1;\r\n    //     console.log(\"new Positoion\",newPosition);\r\n    //   return getNewPositionAfterSnakesAndLadders(newPosition);\r\n    // });\r\n  };\r\n\r\n  // const getNewPositionAfterSnakesAndLadders = (position) => {\r\n  //   const snakes = [\r\n  //     { start: 14, end: 7 },\r\n  //     { start: 24, end: 2 },\r\n  //     { start: 35, end: 18 },\r\n  //     { start: 47, end: 32 },\r\n  //     { start: 62, end: 46 },\r\n  //     { start: 73, end: 56 },\r\n  //     { start: 82, end: 69 },\r\n  //     { start: 92, end: 88 },\r\n  //     { start: 97, end: 78 },\r\n  //   ];\r\n  //   const ladders = [\r\n  //     { start: 5, end: 36 },\r\n  //     { start: 9, end: 22 },\r\n  //     { start: 20, end: 65 },\r\n  //     { start: 28, end: 53 },\r\n  //     { start: 39, end: 59 },\r\n  //     { start: 51, end: 72 },\r\n  //     { start: 63, end: 84 },\r\n  //     { start: 71, end: 91 },\r\n  //     { start: 87, end: 94 },\r\n  //   ];\r\n  //   let newPosition = position;\r\n  //   console.log(\"ayush\",position);\r\n  //   snakes.forEach((snake) => {\r\n  //     if (position === snake.start) {\r\n  //       newPosition = snake.end;\r\n  //     }\r\n  //   });\r\n  //   ladders.forEach((ladder) => {\r\n  //     if (position === ladder.start) {\r\n  //       newPosition = ladder.end;\r\n  //     }\r\n  //   });\r\n  //   return newPosition;\r\n  // };\r\n\r\n  return (<>\r\n    \r\n    <div className=\"game\">\r\n      <Board size={100}>\r\n        {/* <Snake start={14} end={7} />\r\n        <Snake start={24} end={2} />\r\n        <Snake start={35} end={18} />\r\n        <Snake start={47} end={32} />\r\n        <Snake start={62} end={46} />\r\n        <Snake start={73} end={56} />\r\n        <Snake start={82} end={69}/>\r\n        <Snake start={92} end={88} />\r\n        <Snake start={97} end={78} />\r\n\r\n       <Ladder start={5} end={36} /> \r\n       <Ladder start={9} end={22} />\r\n       <Ladder start={20} end={65} />\r\n       <Ladder start={28} end={53} />\r\n       <Ladder start={39} end={59} />\r\n       <Ladder start={51} end={72} />\r\n       <Ladder start={63} end={84} />\r\n       <Ladder start={71} end={91} />\r\n       <Ladder start={87} end={94} /> */}\r\n       <Player position={playerPosition} />\r\n       <Computer position={computerPosition} />\r\n     </Board>\r\n     <Dice value={diceRoll} />\r\n     <button onClick={handleRollDice}>Roll Dice</button>\r\n   </div>\r\n  </>\r\n );\r\n};\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAAA;AAEjC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,IAAIQ,cAAc,IAAI,GAAG,EAAE;MACzBM,KAAK,CAAC,2BAA2B,CAAC;IACpC;IACA,IAAIJ,gBAAgB,IAAI,GAAG,EAAE;MAC3BI,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF,CAAC,EAAE,CAACN,cAAc,EAAEE,gBAAgB,CAAC,CAAC;EACxCK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACR,cAAc,CAAC;EAC7CO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACN,gBAAgB,CAAC;EAC/C,MAAMO,cAAc,GAAG,MAAM;IAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;IACjDR,WAAW,CAACK,OAAO,CAAC;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAQ;IAAA,uBAEN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB,QAAC,KAAK;QAAC,IAAI,EAAE,GAAI;QAAA,wBAoBhB,QAAC,MAAM;UAAC,QAAQ,EAAEV;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,eACpC,QAAC,QAAQ;UAAC,QAAQ,EAAEE;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,eACR,QAAC,IAAI;QAAC,KAAK,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACzB;QAAQ,OAAO,EAAEK,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/C,iBACJ;AAEL,CAAC;AAAC,GAlGIV,IAAI;AAAA,KAAJA,IAAI;AAoGV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}