{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\backup_App.js\",\n  _s = $RefreshSig$();\n// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//  game palyer\n\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:4000\");\n\n// function App() {\n//   const [playerName, setPlayerName] = useState(\"\");\n//   const [opponentName, setOpponentName] = useState(\"\");\n//   const [gameStarted, setGameStarted] = useState(false);\n//   const [playerChoice, setPlayerChoice] = useState(\"\");\n//   const [opponentChoice, setOpponentChoice] = useState(\"\");\n//   const [gameResult, setGameResult] = useState(\"\");\n\n//   useEffect(() => {\n//     socket.on(\"opponentFound\", (opponentName) => {\n//       setOpponentName(opponentName);\n//       setGameStarted(true);\n//     });\n\n//     socket.on(\"choiceMade\", (opponentChoice) => {\n//       setOpponentChoice(opponentChoice);\n//     });\n\n//     socket.on(\"gameResult\", (result) => {\n//       setGameResult(result);\n//     });\n\n//     socket.on(\"gameReset\", () => {\n//       setPlayerChoice(\"\");\n//       setOpponentChoice(\"\");\n//       setGameResult(\"\");\n//     });\n\n//     return () => {\n//       socket.off(\"opponentFound\");\n//       socket.off(\"choiceMade\");\n//       socket.off(\"gameResult\");\n//       socket.off(\"gameReset\");\n//     };\n//   }, []);\n\n//   const handleJoinGame = () => {\n//     socket.emit(\"joinGame\", playerName);\n//   };\n\n//   const handleMakeChoice = (choice) => {\n//     setPlayerChoice(choice);\n//     socket.emit(\"makeChoice\", choice);\n//   };\n\n//   const handleResetGame = () => {\n//     socket.emit(\"resetGame\");\n//   };\n\n//   return (\n//     <div>\n//       {!gameStarted && (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//           <button onClick={handleJoinGame}>Join game</button>\n//         </div>\n//       )}\n//       {gameStarted && (\n//         <div>\n//           <h2>Player: {playerName}</h2>\n//           <h2>Opponent: {opponentName}</h2>\n//           {!playerChoice && (\n//             <div>\n//               <button onClick={() => handleMakeChoice(\"rock\")}>Rock</button>\n//               <button onClick={() => handleMakeChoice(\"paper\")}>Paper</button>\n//               <button onClick={() => handleMakeChoice(\"scissors\")}>\n//                 Scissors\n//               </button>\n//             </div>\n//           )}\n//           {playerChoice && !opponentChoice && <h2>Waiting for opponent...</h2>}\n//           {playerChoice && opponentChoice && (\n//             <div>\n//               <h2>You chose: {playerChoice}</h2>\n//               <h2>Opponent chose: {opponentChoice}</h2>\n//               <h2>{gameResult}</h2>\n//               <button onClick={handleResetGame}>Play again</button>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  //Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      room\n    });\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageReceived(data.message);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \" Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), messageReceived]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZdKt/j8WlpNmwOxrWqm2c6rJW74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","socket","connect","App","room","setRoom","message","setMessage","messageReceived","setMessageReceived","joinRoom","emit","sendMessage","on","data","event","target","value"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/backup_App.js"],"sourcesContent":["// // import \"./App.css\";\n// // import io from \"socket.io-client\";\n// // import { useEffect, useState } from \"react\";\n\n// // // const socket = io.connect(\"http://localhost:3001\");\n// // const MyComponent = () => {\n// //   const [connected, setConnected] = useState(false);\n// //   const [socket, setSocket] = useState(null);\n\n// //   useEffect(() => {\n// //     // Connect to the Socket.IO server\n// //     const newSocket = io('http://localhost:3001');\n\n// //     // Set the socket and the connection status\n// //     setSocket(newSocket);\n// //     setConnected(newSocket.connected);\n\n// //     // Disconnect the socket when the component unmounts\n// //     return () => {\n// //       newSocket.disconnect();\n// //       setSocket(null);\n// //       setConnected(false);\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       {connected ? (\n// //         <p>Socket connection is established</p>\n// //       ) : (\n// //         <p>Socket connection is not established</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n// // function App() {\n\n\n\n// //   //Room State\n// //   const [room, setRoom] = useState(\"\");\n\n// //   // Messages States\n// //   const [message, setMessage] = useState(\"\");\n// //   const [messageReceived, setMessageReceived] = useState(\"\");\n\n// //   const joinRoom = () => {\n// //     if (room !== \"\") {\n// //       socket.emit(\"join_room\", room);\n// //     }\n// //   };\n// //   console.log(\"r\", room, message);\n// //   let stored = localStorage.getItem(\"room\");\n\n// //   var flag = {\n// //     room: room,\n// //     message: message,\n// //   };\n\n// //   var arr = [];\n// //   arr.push(stored, flag);\n\n// //   const sendMessage = () => {\n// //     let msgObj = {\n// //       message: message,\n// //       room: room,\n// //       send: true,\n// //     };\n// //     socket.emit(\"send_message\", { msgObj, room });\n// //     localStorage.setItem(\"room\",JSON.stringify(arr))\n// //   };\n\n// //   useEffect(() => {\n// //     alert(\"uppr\")\n// //     socket.on(\"testsocket\", (data) => {\n// //       console.log(data);\n// //       alert(\"niche\")\n// //       setMessageReceived(data.msgObj.message);\n// //       console.log(\"data\", data);\n// //       let msgObj = {\n// //         message: data.msgObj.message,\n// //         room: data.msgObj.room,\n// //         receive: true,\n// //       };\n// //       console.log(\"received data\", msgObj);\n// //     });\n// //   }, [socket]);\n\n// //   return (\n// //     <>\n// //       <div className=\"App\">\n// //         <input\n// //           placeholder=\"Room Number...\"\n// //           onChange={(event) => {\n// //             setRoom(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={joinRoom}>Join Room</button>\n// //         <input\n// //           placeholder=\"Message...\"\n// //           onChange={(event) => {\n// //             setMessage(event.target.value);\n// //           }}\n// //         />\n// //         <button onClick={sendMessage}>Send Message</button>\n// //         <h1> Message:</h1>\n\n// //         <div id=\"message\">\n// //           <p id=\"history\">\n// //             \"room\" : {room}\n// //             <br />\n// //             \"message\" :{messageReceived}\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// // export default MyComponent;\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:8000\");\n\n// function App() {\n//   const [room, setRoom] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [messageList, setMessageList] = useState([]);\n\n//   useEffect(() => {\n//     socket.on(\"receive_message\", (data) => {\n//       setMessageList([...messageList, data]);\n//     });\n//   });\n\n//   const joinRoom = () => {\n//     socket.emit(\"join_room\", room);\n//   };\n\n//   const sendMessage = () => {\n//     const msgObj = {\n//       room: room,\n//       message: message,\n//     };\n\n//     socket.emit(\"send_message\", { msgObj, room });\n\n//     setMessageList([...messageList, msgObj]);\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <input\n//         placeholder=\"Room Number...\"\n//         value={room}\n//         onChange={(event) => {\n//           setRoom(event.target.value);\n//         }}\n//       />\n//       <button onClick={joinRoom}>Join Room</button>\n//       <br />\n//       <input\n//         placeholder=\"Message...\"\n//         value={message}\n//         onChange={(event) => {\n//           setMessage(event.target.value);\n//         }}\n//       />\n//       <button onClick={sendMessage}>Send Message</button>\n//       <br />\n//       <ul>\n//         {messageList.map((msgObj, index) => (\n//           <li key={index}>\n//             {msgObj.room}: {msgObj.message}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n//  game palyer\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\n\n// const socket = io(\"http://localhost:4000\");\n\n// function App() {\n//   const [playerName, setPlayerName] = useState(\"\");\n//   const [opponentName, setOpponentName] = useState(\"\");\n//   const [gameStarted, setGameStarted] = useState(false);\n//   const [playerChoice, setPlayerChoice] = useState(\"\");\n//   const [opponentChoice, setOpponentChoice] = useState(\"\");\n//   const [gameResult, setGameResult] = useState(\"\");\n\n//   useEffect(() => {\n//     socket.on(\"opponentFound\", (opponentName) => {\n//       setOpponentName(opponentName);\n//       setGameStarted(true);\n//     });\n\n//     socket.on(\"choiceMade\", (opponentChoice) => {\n//       setOpponentChoice(opponentChoice);\n//     });\n\n//     socket.on(\"gameResult\", (result) => {\n//       setGameResult(result);\n//     });\n\n//     socket.on(\"gameReset\", () => {\n//       setPlayerChoice(\"\");\n//       setOpponentChoice(\"\");\n//       setGameResult(\"\");\n//     });\n\n//     return () => {\n//       socket.off(\"opponentFound\");\n//       socket.off(\"choiceMade\");\n//       socket.off(\"gameResult\");\n//       socket.off(\"gameReset\");\n//     };\n//   }, []);\n\n//   const handleJoinGame = () => {\n//     socket.emit(\"joinGame\", playerName);\n//   };\n\n//   const handleMakeChoice = (choice) => {\n//     setPlayerChoice(choice);\n//     socket.emit(\"makeChoice\", choice);\n//   };\n\n//   const handleResetGame = () => {\n//     socket.emit(\"resetGame\");\n//   };\n\n//   return (\n//     <div>\n//       {!gameStarted && (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//           <button onClick={handleJoinGame}>Join game</button>\n//         </div>\n//       )}\n//       {gameStarted && (\n//         <div>\n//           <h2>Player: {playerName}</h2>\n//           <h2>Opponent: {opponentName}</h2>\n//           {!playerChoice && (\n//             <div>\n//               <button onClick={() => handleMakeChoice(\"rock\")}>Rock</button>\n//               <button onClick={() => handleMakeChoice(\"paper\")}>Paper</button>\n//               <button onClick={() => handleMakeChoice(\"scissors\")}>\n//                 Scissors\n//               </button>\n//             </div>\n//           )}\n//           {playerChoice && !opponentChoice && <h2>Waiting for opponent...</h2>}\n//           {playerChoice && opponentChoice && (\n//             <div>\n//               <h2>You chose: {playerChoice}</h2>\n//               <h2>Opponent chose: {opponentChoice}</h2>\n//               <h2>{gameResult}</h2>\n//               <button onClick={handleResetGame}>Play again</button>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  //Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, room });\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageReceived(data.message);\n    });\n  }, [socket]);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"Message...\"\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n      <h1> Message:</h1>\n      {messageReceived}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAO,CAAC,uBAAuB,CAAC;AAElD,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMU,QAAQ,GAAG,MAAM;IACrB,IAAIN,IAAI,KAAK,EAAE,EAAE;MACfH,MAAM,CAACU,IAAI,CAAC,WAAW,EAAEP,IAAI,CAAC;IAChC;EACF,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAM;IACxBX,MAAM,CAACU,IAAI,CAAC,cAAc,EAAE;MAAEL,OAAO;MAAEF;IAAK,CAAC,CAAC;EAChD,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdE,MAAM,CAACY,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrCL,kBAAkB,CAACK,IAAI,CAACR,OAAO,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EACZ,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MACE,WAAW,EAAC,gBAAgB;MAC5B,QAAQ,EAAGc,KAAK,IAAK;QACnBV,OAAO,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAC7B;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,OAAO,EAAEP,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eAC9C;MACE,WAAW,EAAC,YAAY;MACxB,QAAQ,EAAGK,KAAK,IAAK;QACnBR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAChC;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,OAAO,EAAEL,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACpD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EACjBJ,eAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEV;AAAC,GA3CQL,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}