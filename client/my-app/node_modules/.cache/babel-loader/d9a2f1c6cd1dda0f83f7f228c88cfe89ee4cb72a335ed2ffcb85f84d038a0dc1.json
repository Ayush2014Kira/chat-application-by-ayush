{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\assets\\\\one.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './one.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playerPosition, setPlayerPosition] = useState(1);\n  const [computerPosition, setComputerPosition] = useState(1);\n  const [showResult, setShowResult] = useState(false);\n  const [playerRoll, setPlayerRoll] = useState(0);\n  const [computerRoll, setComputerRoll] = useState(0);\n  const rollDice = () => {\n    const playerRollResult = Math.ceil(Math.random() * 6);\n    const computerRollResult = Math.ceil(Math.random() * 6);\n    setPlayerPosition(position => Math.min(position + playerRollResult, 100));\n    setComputerPosition(position => Math.min(position + computerRollResult, 100));\n    setPlayerRoll(playerRollResult);\n    setComputerRoll(computerRollResult);\n    setShowResult(true);\n  };\n  const renderBoard = () => {\n    const cells = [];\n    for (let i = 0; i < 100; i++) {\n      const cellNumber = i + 1;\n      const isActive = playerPosition === cellNumber || computerPosition === cellNumber;\n      const ladder = ladderList.find(ladder => ladder.start === cellNumber);\n      const snake = snakeList.find(snake => snake.start === cellNumber);\n      cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell ${isActive ? 'active' : ''}`,\n        children: [ladder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ladder\",\n          style: {\n            left: ladderLeft(ladder.start),\n            top: ladderTop(ladder.start)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 22\n        }, this), snake && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake\",\n          style: {\n            left: snakeLeft(snake.start),\n            top: snakeTop(snake.start)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), cellNumber]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n    }\n    return cells;\n  };\n  const ladderLeft = position => {\n    const column = (position - 1) % 10;\n    const row = 9 - Math.floor((position - 1) / 10);\n    const isEvenRow = row % 2 === 0;\n    if (isEvenRow) {\n      return `${column * 10 + 5}%`;\n    } else {\n      return `${(9 - column) * 10 + 5}%`;\n    }\n  };\n  const ladderTop = position => {\n    const row = 9 - Math.floor((position - 1) / 10);\n    return `${row * 10}%`;\n  };\n  const snakeLeft = position => {\n    const column = (position - 1) % 10;\n    const row = 9 - Math.floor((position - 1) / 10);\n    const isEvenRow = row % 2 === 0;\n    if (isEvenRow) {\n      return `${column * 10 + 5}%`;\n    } else {\n      return `${(9 - column) * 10 + 5}%`;\n    }\n  };\n  const snakeTop = position => {\n    const row = 9 - Math.floor((position - 1) / 10);\n    return `${row * 10}%`;\n  };\n  const ladderList = [{\n    start: 5,\n    end: 25\n  }, {\n    start: 14,\n    end: 40\n  }, {\n    start: 30,\n    end: 67\n  }, {\n    start: 43,\n    end: 82\n  }, {\n    start: 66,\n    end: 97\n  }];\n  const snakeList = [{\n    start: 31,\n    end: 4\n  }, {\n    start: 37,\n    end: 13\n  }, {\n    start: 47,\n    end: 25\n  }, {\n    start: 59,\n    end: 38\n  }, {\n    start: 70,\n    end: 28\n  }, {\n    start: 82,\n    end: 46\n  }, {\n    start: 94,\n    end: 65\n  }, {\n    start: 98,\n    end: 56\n  }];\n  const renderResult = () => {\n    if (playerPosition === 100 && computerPosition === 100) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: \"It's a tie!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this);\n    } else if (playerPosition === 100) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: \"You win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }, this);\n    } else if (computerPosition === 100) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: \"Computer wins!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  const renderDice = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-dice\",\n        children: showResult && /*#__PURE__*/_jsxDEV(Dice, {\n          value: playerRoll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"computer-dice\",\n        children: showResult && /*#__PURE__*/_jsxDEV(Dice, {\n          value: computerRoll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this), renderResult(), renderDice()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"viIDxJ9inlnbY672NjWhLh2JRoY=\");\n_c = App;\nconst Dice = _ref => {\n  let {\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice\",\n    children: [1, 2, 3, 4, 5, 6].map(num => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `dot dot-${num} ${num === value ? 'active' : ''}`\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Dice;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Dice\");","map":{"version":3,"names":["React","useState","App","playerPosition","setPlayerPosition","computerPosition","setComputerPosition","showResult","setShowResult","playerRoll","setPlayerRoll","computerRoll","setComputerRoll","rollDice","playerRollResult","Math","ceil","random","computerRollResult","position","min","renderBoard","cells","i","cellNumber","isActive","ladder","ladderList","find","start","snake","snakeList","push","left","ladderLeft","top","ladderTop","snakeLeft","snakeTop","column","row","floor","isEvenRow","end","renderResult","renderDice","Dice","value","map","num"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/assets/one.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './one.css';\r\n\r\nconst App = () => {\r\n  const [playerPosition, setPlayerPosition] = useState(1);\r\n  const [computerPosition, setComputerPosition] = useState(1);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [playerRoll, setPlayerRoll] = useState(0);\r\n  const [computerRoll, setComputerRoll] = useState(0);\r\n  \r\n  const rollDice = () => {\r\n    const playerRollResult = Math.ceil(Math.random() * 6);\r\n    const computerRollResult = Math.ceil(Math.random() * 6);\r\n    setPlayerPosition((position) => Math.min(position + playerRollResult, 100));\r\n    setComputerPosition((position) => Math.min(position + computerRollResult, 100));\r\n    setPlayerRoll(playerRollResult);\r\n    setComputerRoll(computerRollResult);\r\n    setShowResult(true);\r\n  };\r\n\r\n  const renderBoard = () => {\r\n    const cells = [];\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      const cellNumber = i + 1;\r\n      const isActive = playerPosition === cellNumber || computerPosition === cellNumber;\r\n      const ladder = ladderList.find((ladder) => ladder.start === cellNumber);\r\n      const snake = snakeList.find((snake) => snake.start === cellNumber);\r\n\r\n      cells.push(\r\n        <div key={i} className={`cell ${isActive ? 'active' : ''}`}>\r\n          {ladder && <div className=\"ladder\" style={{ left: ladderLeft(ladder.start), top: ladderTop(ladder.start) }} />}\r\n          {snake && <div className=\"snake\" style={{ left: snakeLeft(snake.start), top: snakeTop(snake.start) }} />}\r\n          {cellNumber}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return cells;\r\n  };\r\n\r\n  const ladderLeft = (position) => {\r\n    const column = (position - 1) % 10;\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    const isEvenRow = row % 2 === 0;\r\n\r\n    if (isEvenRow) {\r\n      return `${column * 10 + 5}%`;\r\n    } else {\r\n      return `${(9 - column) * 10 + 5}%`;\r\n    }\r\n  };\r\n\r\n  const ladderTop = (position) => {\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    return `${row * 10}%`;\r\n  };\r\n\r\n  const snakeLeft = (position) => {\r\n    const column = (position - 1) % 10;\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    const isEvenRow = row % 2 === 0;\r\n\r\n    if (isEvenRow) {\r\n      return `${column * 10 + 5}%`;\r\n    } else {\r\n      return `${(9 - column) * 10 + 5}%`;\r\n    }\r\n  };\r\n\r\n  const snakeTop = (position) => {\r\n    const row = 9 - Math.floor((position - 1) / 10);\r\n    return `${row * 10}%`;\r\n  };\r\n\r\n  const ladderList = [\r\n    { start: 5, end: 25 },\r\n    { start: 14, end: 40 },\r\n    { start: 30, end: 67 },\r\n    { start: 43, end: 82 },\r\n    { start: 66, end: 97 },\r\n  ];\r\n\r\n  const snakeList = [\r\n    { start: 31, end: 4 },\r\n   \r\n    { start: 37, end: 13 },\r\n    { start: 47, end: 25 },\r\n    { start: 59, end: 38 },\r\n    { start: 70, end: 28 },\r\n    { start: 82, end: 46 },\r\n    { start: 94, end: 65 },\r\n    { start: 98, end: 56 },\r\n    ];\r\n    \r\n    const renderResult = () => {\r\n    if (playerPosition === 100 && computerPosition === 100) {\r\n    return <div className=\"result\">It's a tie!</div>;\r\n    } else if (playerPosition === 100) {\r\n    return <div className=\"result\">You win!</div>;\r\n    } else if (computerPosition === 100) {\r\n    return <div className=\"result\">Computer wins!</div>;\r\n    } else {\r\n    return null;\r\n    }\r\n    };\r\n    \r\n    const renderDice = () => {\r\n    return (\r\n    <div className=\"dice-container\">\r\n    <div className=\"player-dice\">\r\n    {showResult && <Dice value={playerRoll} />}\r\n    </div>\r\n    <div className=\"computer-dice\">\r\n    {showResult && <Dice value={computerRoll} />}\r\n    </div>\r\n    </div>\r\n    );\r\n    };\r\n    \r\n    return (\r\n    <div className=\"App\">\r\n    <div className=\"board-container\">{renderBoard()}</div>\r\n    <div className=\"button-container\">\r\n    <button onClick={rollDice}>Roll dice</button>\r\n    </div>\r\n    {renderResult()}\r\n    {renderDice()}\r\n    </div>\r\n    );\r\n    };\r\n    \r\n    const Dice = ({ value }) => {\r\n    return (\r\n    <div className=\"dice\">\r\n    {[1, 2, 3, 4, 5, 6].map((num) => (\r\n    <span key={num} className={`dot dot-${num} ${num === value ? 'active' : ''}`} />\r\n    ))}\r\n    </div>\r\n    );\r\n    };\r\n    \r\n    export default App;\r\n    \r\n    \r\n    \r\n    \r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}