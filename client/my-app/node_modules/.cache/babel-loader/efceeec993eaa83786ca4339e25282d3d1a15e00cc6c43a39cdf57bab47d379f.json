{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\page\\\\menu.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./../css/page/menu.css\";\nimport { socket } from \"../context/socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(_ref) {\n  _s();\n  let {\n    parentCallback,\n    active = true,\n    path\n  } = _ref;\n  const [code, setCode] = useState(path);\n  const [name, setName] = useState(\"\");\n  const [chosenColor, setChosenColor] = useState({\n    \"yellow\": \"#D3B542\"\n  });\n  function createRoom(pname, pcolor) {\n    socket.emit(\"create-room\", pname, pcolor);\n    console.log(pname, pcolor);\n  }\n  function joinRoom(input, pname, pcolor) {\n    socket.emit(\"join-room\", input, pname, pcolor);\n  }\n  let colors = [{\n    \"yellow\": \"#D3B542\"\n  }, {\n    \"blue\": \"#649DB1\"\n  }, {\n    \"green\": \"#9CBB38\"\n  }, {\n    \"white\": \"#BE9C7A\"\n  }, {\n    \"darkwhite\": \"#AF8865\"\n  }, {\n    \"lightbrown\": \"#A47B5B\"\n  }, {\n    \"brown\": \"#8E5937\"\n  }, {\n    \"black\": \"#3C2B22\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: active ? \"menu\" : \"menu hide\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rock\",\n        children: \"rock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"paper\",\n        children: \"paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"scissors\",\n        children: \"scissors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        id: \"name\",\n        placeholder: \"JOHN DOE\",\n        value: name,\n        onInput: e => setName(e.target.value),\n        type: \"text\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"colors\",\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: \"SKIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"colorpicker\",\n        id: \"colors\",\n        children: colors.map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setChosenColor(color);\n              parentCallback(Object.keys(color)[0]);\n            },\n            className: Object.keys(chosenColor)[0] == Object.keys(color) ? \"color active\" : \"color\",\n            style: {\n              backgroundColor: Object.values(color)\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        style: {\n          backgroundColor: Object.values(chosenColor)\n        },\n        onClick: () => createRoom(name, Object.keys(chosenColor)[0]),\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"code\",\n        children: \"JOIN GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          id: \"code\",\n          style: {\n            textTransform: \"uppercase\"\n          },\n          placeholder: \"Game Code\",\n          value: code,\n          onInput: e => setCode(e.target.value),\n          type: \"text\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          style: {\n            backgroundColor: Object.values(chosenColor)\n          },\n          onClick: () => joinRoom(code.toUpperCase(), name, Object.keys(chosenColor)[0]),\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Menu, \"KXfb3aLDtkmHuxdD++RKpXQD8Mw=\");\n_c = Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","socket","Menu","parentCallback","active","path","code","setCode","name","setName","chosenColor","setChosenColor","createRoom","pname","pcolor","emit","console","log","joinRoom","input","colors","e","target","value","marginBottom","map","color","index","Object","keys","backgroundColor","values","textTransform","toUpperCase"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/page/menu.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport  \"./../css/page/menu.css\"\r\nimport { socket } from \"../context/socket\";\r\n\r\nexport default function Menu({ parentCallback, active = true, path }) {\r\n\r\n    const [code, setCode] = useState(path);\r\n    const [name, setName] = useState(\"\");\r\n    const [chosenColor, setChosenColor] = useState({ \"yellow\": \"#D3B542\" });\r\n\r\n    function createRoom(pname, pcolor) {\r\n        socket.emit(\"create-room\", pname, pcolor);\r\n        console.log(pname,pcolor);\r\n    }\r\n\r\n    function joinRoom(input, pname, pcolor) {\r\n        socket.emit(\"join-room\", input, pname, pcolor);\r\n    }\r\n\r\n    let colors = [\r\n        { \"yellow\": \"#D3B542\" },\r\n        { \"blue\": \"#649DB1\" },\r\n        { \"green\": \"#9CBB38\" },\r\n        { \"white\": \"#BE9C7A\" },\r\n        { \"darkwhite\": \"#AF8865\" },\r\n        { \"lightbrown\": \"#A47B5B\" },\r\n        { \"brown\": \"#8E5937\" },\r\n        { \"black\": \"#3C2B22\" },\r\n    ];\r\n\r\n    return (\r\n        <div className={ active ? \"menu\" : \"menu hide\" }>\r\n\r\n            <div className=\"title\">\r\n                <span className=\"rock\">rock</span>\r\n                <span className=\"paper\">paper</span>\r\n                <span className=\"scissors\">scissors</span>\r\n            </div>\r\n\r\n            <div className=\"options\">\r\n                <label htmlFor=\"name\">NAME</label>\r\n                <input\r\n                    className= \"input\"\r\n                    id=\"name\"\r\n                    placeholder=\"JOHN DOE\"\r\n                    value={name}\r\n                    onInput={e => setName(e.target.value)} type=\"text\"\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <label htmlFor=\"colors\" style={{ marginBottom: \"10px\" }}>\r\n                    SKIN\r\n                </label>\r\n\r\n                <ul className=\"colorpicker\" id=\"colors\">\r\n                    {colors.map((color, index) => {\r\n                        return <li key={index}\r\n                            onClick={() => {\r\n                                setChosenColor(color);\r\n                                parentCallback(Object.keys(color)[0]);\r\n                            }}\r\n                            className={\r\n                            Object.keys(chosenColor)[0] == Object.keys(color)\r\n                                ?  \"color active\"\r\n                                : \"color\"\r\n                            }\r\n                            style={{ backgroundColor: Object.values(color) }}\r\n                        />\r\n                    })}\r\n                </ul>\r\n\r\n                <button\r\n                    className=\"button\"\r\n                    style={{ backgroundColor: Object.values(chosenColor) }}\r\n                    onClick={() => createRoom(name, Object.keys(chosenColor)[0])}\r\n                >\r\n                    Create Game\r\n                </button>\r\n\r\n                <label htmlFor=\"code\">JOIN GAME</label>\r\n\r\n                <div className=\"join\">\r\n                    <input className=\"input\"\r\n                        id=\"code\"\r\n                        style={{ textTransform: \"uppercase\" }}\r\n                        placeholder=\"Game Code\"\r\n                        value={code}\r\n                        onInput={e => setCode(e.target.value)}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <button\r\n                        className=\"button\"\r\n                        style={{ backgroundColor: Object.values(chosenColor) }}\r\n                        onClick={\r\n                            () =>\r\n                                joinRoom(\r\n                                    code.toUpperCase(),\r\n                                    name,\r\n                                    Object.keys(chosenColor)[0]\r\n                                )}\r\n                    >\r\n                        Join\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}