{"ast":null,"code":"// import \"./App.css\";\n// import io from \"socket.io-client\";\n// import { useEffect, useState } from \"react\";\n\n// // const socket = io.connect(\"http://localhost:3001\");\n// const MyComponent = () => {\n//   const [connected, setConnected] = useState(false);\n//   const [socket, setSocket] = useState(null);\n\n//   useEffect(() => {\n//     // Connect to the Socket.IO server\n//     const newSocket = io('http://localhost:3001');\n\n//     // Set the socket and the connection status\n//     setSocket(newSocket);\n//     setConnected(newSocket.connected);\n\n//     // Disconnect the socket when the component unmounts\n//     return () => {\n//       newSocket.disconnect();\n//       setSocket(null);\n//       setConnected(false);\n//     };\n//   }, []);\n\n//   return (\n//     <div>\n//       {connected ? (\n//         <p>Socket connection is established</p>\n//       ) : (\n//         <p>Socket connection is not established</p>\n//       )}\n//     </div>\n//   );\n// };\n// function App() {\n\n//   //Room State\n//   const [room, setRoom] = useState(\"\");\n\n//   // Messages States\n//   const [message, setMessage] = useState(\"\");\n//   const [messageReceived, setMessageReceived] = useState(\"\");\n\n//   const joinRoom = () => {\n//     if (room !== \"\") {\n//       socket.emit(\"join_room\", room);\n//     }\n//   };\n//   console.log(\"r\", room, message);\n//   let stored = localStorage.getItem(\"room\");\n\n//   var flag = {\n//     room: room,\n//     message: message,\n//   };\n\n//   var arr = [];\n//   arr.push(stored, flag);\n\n//   const sendMessage = () => {\n//     let msgObj = {\n//       message: message,\n//       room: room,\n//       send: true,\n//     };\n//     socket.emit(\"send_message\", { msgObj, room });\n//     localStorage.setItem(\"room\",JSON.stringify(arr))\n//   };\n\n//   useEffect(() => {\n//     alert(\"uppr\")\n//     socket.on(\"testsocket\", (data) => {\n//       console.log(data);\n//       alert(\"niche\")\n//       setMessageReceived(data.msgObj.message);\n//       console.log(\"data\", data);\n//       let msgObj = {\n//         message: data.msgObj.message,\n//         room: data.msgObj.room,\n//         receive: true,\n//       };\n//       console.log(\"received data\", msgObj);\n//     });\n//   }, [socket]);\n\n//   return (\n//     <>\n//       <div className=\"App\">\n//         <input\n//           placeholder=\"Room Number...\"\n//           onChange={(event) => {\n//             setRoom(event.target.value);\n//           }}\n//         />\n//         <button onClick={joinRoom}>Join Room</button>\n//         <input\n//           placeholder=\"Message...\"\n//           onChange={(event) => {\n//             setMessage(event.target.value);\n//           }}\n//         />\n//         <button onClick={sendMessage}>Send Message</button>\n//         <h1> Message:</h1>\n\n//         <div id=\"message\">\n//           <p id=\"history\">\n//             \"room\" : {room}\n//             <br />\n//             \"message\" :{messageReceived}\n//           </p>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default MyComponent;","map":{"version":3,"names":[],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/backup_App.js"],"sourcesContent":["// import \"./App.css\";\n// import io from \"socket.io-client\";\n// import { useEffect, useState } from \"react\";\n\n// // const socket = io.connect(\"http://localhost:3001\");\n// const MyComponent = () => {\n//   const [connected, setConnected] = useState(false);\n//   const [socket, setSocket] = useState(null);\n\n//   useEffect(() => {\n//     // Connect to the Socket.IO server\n//     const newSocket = io('http://localhost:3001');\n\n//     // Set the socket and the connection status\n//     setSocket(newSocket);\n//     setConnected(newSocket.connected);\n\n//     // Disconnect the socket when the component unmounts\n//     return () => {\n//       newSocket.disconnect();\n//       setSocket(null);\n//       setConnected(false);\n//     };\n//   }, []);\n\n//   return (\n//     <div>\n//       {connected ? (\n//         <p>Socket connection is established</p>\n//       ) : (\n//         <p>Socket connection is not established</p>\n//       )}\n//     </div>\n//   );\n// };\n// function App() {\n\n\n\n//   //Room State\n//   const [room, setRoom] = useState(\"\");\n\n//   // Messages States\n//   const [message, setMessage] = useState(\"\");\n//   const [messageReceived, setMessageReceived] = useState(\"\");\n\n//   const joinRoom = () => {\n//     if (room !== \"\") {\n//       socket.emit(\"join_room\", room);\n//     }\n//   };\n//   console.log(\"r\", room, message);\n//   let stored = localStorage.getItem(\"room\");\n\n//   var flag = {\n//     room: room,\n//     message: message,\n//   };\n\n//   var arr = [];\n//   arr.push(stored, flag);\n\n//   const sendMessage = () => {\n//     let msgObj = {\n//       message: message,\n//       room: room,\n//       send: true,\n//     };\n//     socket.emit(\"send_message\", { msgObj, room });\n//     localStorage.setItem(\"room\",JSON.stringify(arr))\n//   };\n\n//   useEffect(() => {\n//     alert(\"uppr\")\n//     socket.on(\"testsocket\", (data) => {\n//       console.log(data);\n//       alert(\"niche\")\n//       setMessageReceived(data.msgObj.message);\n//       console.log(\"data\", data);\n//       let msgObj = {\n//         message: data.msgObj.message,\n//         room: data.msgObj.room,\n//         receive: true,\n//       };\n//       console.log(\"received data\", msgObj);\n//     });\n//   }, [socket]);\n\n//   return (\n//     <>\n//       <div className=\"App\">\n//         <input\n//           placeholder=\"Room Number...\"\n//           onChange={(event) => {\n//             setRoom(event.target.value);\n//           }}\n//         />\n//         <button onClick={joinRoom}>Join Room</button>\n//         <input\n//           placeholder=\"Message...\"\n//           onChange={(event) => {\n//             setMessage(event.target.value);\n//           }}\n//         />\n//         <button onClick={sendMessage}>Send Message</button>\n//         <h1> Message:</h1>\n\n//         <div id=\"message\">\n//           <p id=\"history\">\n//             \"room\" : {room}\n//             <br />\n//             \"message\" :{messageReceived}\n//           </p>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default MyComponent;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}