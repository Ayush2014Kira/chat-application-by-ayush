{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Downloads\\\\Socket Demo App\\\\Socket Demo App\\\\client\\\\my-app\\\\src\\\\assets\\\\board.js\";\nimport React from 'react';\nimport './board.css';\n\n// const Board = ({ size, children }) => {\n// const renderCells = () => {\n// const cells = [];\n\n// for (let i = size; i >= 1; i--) {\n// cells.push(<div key={i} className={`cell cell-${i}`}>{i}</div>);\n// }\n// return cells;\n// };\n// return (\n//     <div className=\"board\">\n//       {renderCells()}\n//       {children}\n//     </div>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    size,\n    children\n  } = _ref;\n  const renderCells = () => {\n    const cells = [];\n    let row = [];\n    for (let i = 1; i <= size; i++) {\n      row.push(i);\n\n      // If we've reached the end of a row, push it into the cells array and start a new row\n      if (i % 10 === 0) {\n        cells.push(row);\n        row = [];\n      }\n    }\n    return cells.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell cell-${cell}`,\n        children: cell\n      }, cellIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [renderCells(), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Board","size","children","renderCells","cells","row","i","push","map","rowIndex","cell","cellIndex"],"sources":["C:/Users/ayush/Downloads/Socket Demo App/Socket Demo App/client/my-app/src/assets/board.js"],"sourcesContent":["import React from 'react';\r\nimport './board.css';\r\n\r\n// const Board = ({ size, children }) => {\r\n// const renderCells = () => {\r\n// const cells = [];\r\n\r\n// for (let i = size; i >= 1; i--) {\r\n// cells.push(<div key={i} className={`cell cell-${i}`}>{i}</div>);\r\n// }\r\n// return cells;\r\n// };\r\n// return (\r\n//     <div className=\"board\">\r\n//       {renderCells()}\r\n//       {children}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\nconst Board = ({ size, children }) => {\r\n  const renderCells = () => {\r\n    const cells = [];\r\n    let row = [];\r\n\r\n    for (let i = 1; i <= size; i++) {\r\n      row.push(i);\r\n\r\n      // If we've reached the end of a row, push it into the cells array and start a new row\r\n      if (i % 10 === 0) {\r\n        cells.push(row);\r\n        row = [];\r\n      }\r\n    }\r\n\r\n    return cells.map((row, rowIndex) => (\r\n      <div key={rowIndex} className=\"row\">\r\n        {row.map((cell, cellIndex) => (\r\n          <div key={cellIndex} className={`cell cell-${cell}`}>{cell}</div>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {renderCells()}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA,MAAMC,KAAK,GAAG,QAAwB;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC;EAC/B,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,GAAG,GAAG,EAAE;IAEZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIL,IAAI,EAAEK,CAAC,EAAE,EAAE;MAC9BD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;;MAEX;MACA,IAAIA,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;QAChBF,KAAK,CAACG,IAAI,CAACF,GAAG,CAAC;QACfA,GAAG,GAAG,EAAE;MACV;IACF;IAEA,OAAOD,KAAK,CAACI,GAAG,CAAC,CAACH,GAAG,EAAEI,QAAQ,kBAC7B;MAAoB,SAAS,EAAC,KAAK;MAAA,UAChCJ,GAAG,CAACG,GAAG,CAAC,CAACE,IAAI,EAAEC,SAAS,kBACvB;QAAqB,SAAS,EAAG,aAAYD,IAAK,EAAE;QAAA,UAAEA;MAAI,GAAhDC,SAAS;QAAA;QAAA;QAAA;MAAA,QACpB;IAAC,GAHMF,QAAQ;MAAA;MAAA;MAAA;IAAA,QAKnB,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,WACnBN,WAAW,EAAE,EACbD,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,KA9BIF,KAAK;AAgCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}